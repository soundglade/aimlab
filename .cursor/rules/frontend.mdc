---
description: Frontend Conventions
globs: *.tsx, *.css
alwaysApply: false
---
# AIM Lab Frontend Conventions

This document provides key information about the frontend architecture and conventions.

## Project Structure

- @src/pages/ - Next.js pages directory containing all route components (using Pages Router, not App Router)
  - @src/pages/admin/ - Admin dashboard and management interfaces
  - @src/pages/playground/ - Interactive playground features
  - Dynamic routes should be created using [param].tsx files in the pages directory
- @src/components/ - Reusable UI components
- @src/styles/ - Global styles and CSS modules
- @src/lib/ - Utility functions and shared logic

## Key Conventions

### Code Style
- Prefer functional programming patterns over classes and object-oriented patterns
- Use pure functions and immutable data structures when possible

### Routing
- We use Next.js Pages Router (not App Router)
- Dynamic routes should be created in the pages directory using [param].tsx naming convention
- Example: For a route like /rila/123, create src/pages/rila/[id].tsx
- Keep route handling logic in the pages directory, component logic in components directory

### Styling
- We use Tailwind CSS v4 for styling (@src/styles/globals.css)
- Avoid using color classes. Instead use shadcn/ui semantic classes (i.e. bg-primary)
- Make abunded used of the "muted" colors, for a more gentle look
- Custom styles should be minimal and only used when Tailwind isn't sufficient
- Follow mobile-first responsive design principles

### Components
- We use shadcn/ui as our primary component library
- Install missing shadcn/ui components using `npx shadcn@canary add componentname`

### Content Style
- Keep it simple
- Use gentle, mindful language that invites rather than demands
- Keep text minimal and purposeful
- Write with a calm, supportive tone